name: Build & Push Docker image to GHCR

on:
  push:
    branches: [ "main" ]          # publica cuando haces push a main
    tags: [ "v*.*.*" ]            # y cuando creas tags tipo v1.2.3
  workflow_dispatch:              # permite ejecutarlo manualmente

permissions:
  contents: read
  packages: write                 # necesario para subir a GHCR

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # (Opcional) Soporte multi-arquitectura
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # GHCR login usando GITHUB_TOKEN (no necesitas PAT)
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Calcula la ruta de imagen en minúsculas: ghcr.io/<owner>/<repo>
      - name: Compute image name (lowercase)
        id: img
        run: |
          IMAGE="${{ env.REGISTRY }}/$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')"
          echo "name=$IMAGE" >> $GITHUB_OUTPUT

      # Genera tags y labels OCI automáticamente
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.img.outputs.name }}
          # Tags útiles:
          tags: |
            type=ref,event=branch           # p.ej. main -> :main
            type=ref,event=tag              # p.ej. v1.2.3 -> :v1.2.3
            type=sha                        # :sha-<commit>
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}  # :latest en main
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}

      # Build + Push con caché
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          # Descomenta para multi-arch si tu imagen lo soporta:
          # platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
